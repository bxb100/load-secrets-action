name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  test-action:
    name: GitHub Actions Test
    strategy:
      matrix:
        type: ['server', 'connect']
        platform: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Connect Server
        id: setup-connect-server
        if: ${{ matrix.type == 'connect' }}
        run: |
          echo ${{ secrets.OP_CONNECT_CREDENTIALS }} > 1password-credentials.json
          cp .github/fixture/docker-compose.yml docker-compose.yml
          docker-compose up -d

      - name: Test Connect
        id: test-connect
        if: ${{ matrix.type == 'connect' }}
        uses: ./
        with:
          unset-previous: 'true'
          export-env: 'true'
        env:
          OP_CONNECT_HOST: 'http://localhost:8080'
          OP_CONNECT_TOKEN: ${{ secrets.OP_CONNECT_TOKEN }}
          test: 'op://dev/GitHub Action Test/text'

      - name: Test Server
        id: test-server
        if: ${{ matrix.type == 'server' }}
        uses: ./
        with:
          unset-previous: 'true'
          export-env: 'true'
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          test: 'op://dev/GitHub Action Test/text'

      - name: Test
        run: |
          node -e "process.env.test === 'hello world' ? process.exit(0) : process.exit(1)"
